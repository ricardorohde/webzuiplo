<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class Super_admin extends CI_Controller{

  public $status;
  public $roles;


  public function __construct()
  {
    parent::__construct();
    $this->load->model('SuperAdmin_model', 'super_admin_model');
    $this->load->library('form_validation');
    $this->form_validation->set_error_delimiters('<div class="error">', '</div>');
    $this->status = $this->config->item('status');
    $this->roles = $this->config->item('roles');
  }

  public function index()
  {
    if(empty($this->session->userdata['email'])){
        redirect(site_url().'Super_admin/login/');
      }
    $this->load->view('super_admin/header');
    $this->load->view('super_admin/index');
    $this->load->view('super_admin/footer');
  }
  public function register()
          {
            $this->form_validation->set_rules('firstname', 'First Name', 'required');
            $this->form_validation->set_rules('lastname', 'Last Name', 'required');
            $this->form_validation->set_rules('email', 'Email', 'required|valid_email');
            if ($this->form_validation->run() == FALSE)
            {
                $this->super_admin_model->load('super_admin/register');
            }else
            {
                if($this->super_admin_model->isDuplicate($this->input->post('email')))
                {
                    $this->session->set_flashdata('flash_message', 'User email already exists');
                    redirect(site_url().'super_admin/login');
                }else
                {
                    $clean = $this->security->xss_clean($this->input->post(NULL, TRUE));
                    $id = $this->super_admin_model->insertUser($clean);
                    $token = $this->super_admin_model->insertToken($id);
                    $qstring = $this->base64url_encode($token);
                    $url = site_url() . 'super_admin/complete/token/' . $qstring;
                    $link = '<a href="' . $url . '">' . $url . '</a>';
                    $message = '';
                    $message .= '<strong>You have signed up with our website</strong><br>';
                    $message .= '<strong>Please click:</strong> ' . $link;
                    echo $message;
                    exit;
                };
            }
        }
        protected function _islocal()
          {
            return strpos($_SERVER['HTTP_HOST'], 'local');
          }

        public function complete()
          {
            $token = base64_decode($this->uri->segment(4));
            $cleanToken = $this->security->xss_clean($token);
            $user_info = $this->super_admin_model->isTokenValid($cleanToken);
            if(!$user_info)
            {
              $this->session->set_flashdata('flash_message', 'Token is invalid or expired');
                redirect(site_url().'super_admin/login');
            }
            $data = array(
                'firstName'=> $user_info->first_name,
                'email'=>$user_info->email,
                'user_id'=>$user_info->id,
                'token'=>$this->base64url_encode($token)
            );

            $this->form_validation->set_rules('password', 'Password', 'required|min_length[5]');
            $this->form_validation->set_rules('passconf', 'Password Confirmation', 'required|matches[password]');

            if ($this->form_validation->run() == FALSE) {
                $this->super_admin->load('complete');

            }else{

                $this->load->library('password');
                $post = $this->input->post(NULL, TRUE);

                $cleanPost = $this->security->xss_clean($post);

                $hashed = $this->password->create_hash($cleanPost['password']);
                $cleanPost['password'] = $hashed;
                unset($cleanPost['passconf']);
                $userInfo = $this->super_admin_model->updateUserInfo($cleanPost);

                if(!$userInfo){
                    $this->session->set_flashdata('flash_message', 'There was a problem updating your record');
                    redirect(site_url().'super_admin/login');
                }

                unset($userInfo->password);

                foreach($userInfo as $key=>$val){
                    $this->session->set_userdata($key, $val);
                }
                redirect(site_url().'super_admin/');

            }
        }

        public function login()
        {
            $this->form_validation->set_rules('email', 'Email', 'required|valid_email');
            $this->form_validation->set_rules('password', 'Password', 'required');

            if($this->form_validation->run() == FALSE) {
              $this->load->view('super_admin/login');

            }else{

                $post = $this->input->post();
                $clean = $this->security->xss_clean($post);

                $userInfo = $this->super_admin_model->checkLogin($clean);

                if(!$userInfo){
                    $this->session->set_flashdata('flash_message', 'The login was unsucessful');
                    redirect(site_url().'super_admin/login');
                }
                foreach($userInfo as $key=>$val){
                    $this->session->set_userdata($key, $val);
                }
                redirect(site_url().'super_admin/');
            }

        }

        public function logout()
        {
            $this->session->sess_destroy();
            redirect(site_url().'super_admin/login');
        }

  public function users()
  {
    $data['users'] = $this->db->get('users')->result_array();
    $this->load->view('super_admin/header');
    $this->load->view('super_admin/master/users/all', $data);
    $this->load->view('super_admin/footer');
  }
  public function termscondition()
		{
						$data['master_termscondition'] = $this->db->get('master_termscondition')->result_array();
						$this->SuperAdmin_model->load('super_admin/master/TermsCondition/all',$data);
		}
		public function save_master_termscondition()
		{
				$data = array (
						'id'=>$this->input->post('id'),
						'isi'=>$this->input->post('isi'));
				$this->SuperAdmin_model->save_master_termscondition($data);
				redirect('Super_admin/termscondition', $data);
		}
		public function delete_master_termscondition($id)
		{
						$this->db->where('id',$id);
						$this->db->delete('master_termscondition');
						redirect(base_url('Super_admin/termscondition'));
		}
		public function edit_master_termscondition($id)
		{
			$data = array();
			$data['master_termscondition'] = $this->db->get('master_termscondition')->result_array();
			$data['master_termscondition'] = $this->db->where_in('id',$id)->get('master_termscondition')->row_array();
			$this->SuperAdmin_model->load('super_admin/master/TermsCondition/edit',$data);
		}
		public function save_master_termscondition_update()
					{
						$data['master_termscondition'] = $this->db->get('master_termscondition')->result_array();
						$data = $this->input->post();
						$this->db->where('id', $data['id']);
						$this->db->update('master_termscondition',$data);
						$this->SuperAdmin_model->load('super_admin/master/TermsCondition/all', $data);
						redirect(base_url('Super_admin/termscondition/all', $data));
					}
					public function get_master_termscondition_add()
			    {
			        $data['master_termscondition'] = $this->db->get('master_termscondition')->result_array();
			        $this->SuperAdmin_model->load('super_admin/master/TermsCondition/add', $data);
			    }
    public function faqandhelp()
    {
      $data['master_faqhelp'] = $this->db->get('master_faqhelp')->result_array();
      $this->SuperAdmin_model->load('super_admin/master/FaqAndHelp/all',$data);
    }
    public function save_master_faqandhelp()
    {
      $data = array (
          'id'=>$this->input->post('id'),
          'judul'=>$this->input->post('judul'),
          'isi'=>$this->input->post('isi'));
      $this->SuperAdmin_model->save_master_faqandhelp($data);
      redirect('Super_admin/faqandhelp', $data);
    }
    public function delete_master_faqandhelp($id)
    {
            $this->db->where('id',$id);
            $this->db->delete('master_faqhelp');
            redirect(base_url('Super_admin/termscondition'));
    }
    public function edit_master_faqandhelp($id)
    {
      $data = array();
      $data['master_faqhelp'] = $this->db->get('master_faqhelp')->result_array();
      $data['master_faqhelp'] = $this->db->where_in('id',$id)->get('master_faqhelp')->row_array();

      $this->SuperAdmin_model->load('super_admin/master/FaqAndHelp/edit',$data);

    }

}
